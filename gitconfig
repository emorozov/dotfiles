[user]
	email = jmv@emorozov.net
	name = Eugene Morozov
	signingkey = 3FD81BB20ED80231

[core]
	editor = nvim
	autocrlf = input
	pager = delta
	excludesfile = ~/.gitignore
	quotepath = off
[merge]
	tool = meld
[fetch]
	prune = true
[push]
	default = simple
    autoSetupRemote = true
[stash]
	showPatch = true
[log]
	decorate = full
[commit]
	gpgsign = true
[alias]
	s = status -sb
	sw = switch
	a = add
	cp = cherry-pick
	recent = ! git branch --sort=-committerdate --format=\"%(committerdate:relative)%09%(refname:short)\" | head -10
    bb = !better-branch.sh
	amend = commit --amend --no-edit --date=now -a
	lg = log --color --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	co = checkout
	pf = push --force-with-lease
        in = !git fetch && git log --oneline --graph ..@{u}
        out = log --oneline --graph @{u}..
        branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
        delete-merged-branches = "!f() { git checkout --quiet master && git branch --merged | grep --invert-match '\\*' | xargs -n 1 git branch --delete; git checkout --quiet @{-1}; }; f"
        find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
        show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
[pull]
	ff = only
[delta]
    syntax-theme = Monokai Extended
    #features = side-by-side line-numbers
    features = line-numbers
    whitespace-error-style = 22 reverse
    #syntax-theme = GitHub
[interactive]
    diffFilter = delta --color-only
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[rerere]
	enabled = true
[diff]
	tool = meld
[init]
	defaultBranch = master
[includeIf "gitdir:~/work/"]
        path = ~/work/.gitconfig
